task :boot do
  require './boot'
end

namespace :db do
  desc 'Migrate the database (options: VERSION=x)'
  task :migrate => :boot do
    ActiveRecord::Migration.verbose = true
    ActiveRecord::Migrator.migrate 'db/migrate', ENV['VERSION'] ? ENV['VERSION'].to_i : nil
  end

  desc 'Rolls the schema back to the previous version (specify steps w/ STEP=n)'
  task :rollback => :boot do
    ActiveRecord::Migrator.rollback 'db/migrate', ENV['STEP'] ? ENV['STEP'].to_i : 1
  end

  desc 'Populate database with sample data'
  task :seed => :boot do
    Application.load_models!
    require 'db/seeds'
  end
end

namespace :spec do
  require 'rspec/core/rake_task'

  namespace :unit do
    desc 'Run model unit tests'
    RSpec::Core::RakeTask.new(:models) do |task|
      task.verbose = false
      task.pattern = 'spec/models/**/*_spec.rb'
      task.rspec_opts = '--profile'
    end

    desc 'Run service unit tests'
    RSpec::Core::RakeTask.new(:services) do |task|
      task.verbose = false
      task.pattern = 'spec/services/**/*_spec.rb'
      task.rspec_opts = '--profile'
    end

    task :all => [:models, :services]
  end

  namespace :integration do
    desc 'Run common usecase integration tests'
    RSpec::Core::RakeTask.new(:usecases) do |task|
      task.verbose = false
      task.pattern = 'spec/integration/**/*_spec.rb'
      task.rspec_opts == '--profile'
    end

    task :all => [:usecases]
  end

  task :all => ['unit:all', 'integration:all']
end

desc 'Load applicationn in a pry console'
task :pry do
  system(<<-EOF
    RACK_ENV=test bundle exec pry -I. -r ./boot -e '
      puts "loading lib..."; Application.load_lib!;
      puts "loading models..."; Application.load_models!;
      puts "loading config..."; Application.load_config!;
      puts "finding factories..."; FactoryGirl.find_definitions;
      puts "checking factory validity..."; FactoryGirl.lint;
      puts "done"
    '
  EOF
  )
end
