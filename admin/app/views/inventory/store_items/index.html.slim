h2.page-header.text-primary
  | Store Items

div
  div.panel.panel-default
    div.panel-heading.clearfix
      h4.pull-left
        ' Listings
        small title='Legend' data-toggle='tooltip' data-placement='top'
          i.fa.fa-square.text-danger
          '  Not Available
          i.fa.fa-square.text-success
          '  Available, Active
      div.pull-right.btn-toolbar
        div.btn-group
          button.btn.btn-primary data-toggle='modal' data-target='#create-store-item'
            i.fa.fa-plus-circle
            |  Store Item
    table.table.table-bordered.table-hover.table-condensed
      thead
        tr
          td
            label ID
          td
            label Name
          td
            label Item
          td
            label Price
          td
            label Available
          td
            label Active
          td.col-md-1
            label Actions
      tbody
        - @store_items.each do |store_item|
          tr id="store-item-#{store_item.id}" class="#{!store_item.available? ? 'danger' : (store_item.active? ? 'success' : '')}"
            td = store_item.id
            td = store_item.name
            td = store_item.item.title
            td = store_item.price.name
            td = yesno(store_item.available?)
            td = yesno(store_item.active?)
            td
              div.btn-toolbar
                div.btn-group title='Edit' data-toggle='tooltip' data-placement='top'
                  button.btn.btn-success data-toggle='modal' data-target="#edit-store-item-#{store_item.id}"
                    i.fa.fa-pencil-square-o
                div.btn-group title='Delete' data-toggle='tooltip' data-placement='top'
                  = button_to inventory_store_item_path(store_item.id), method: :delete, disabled: !store_item.deletable?, class: 'btn btn-danger' do
                    i.fa.fa-trash-o
- content_for :modals do
  div.modal id='create-store-item' role='dialog'
    div.modal-dialog
      div.modal-content
        = form_for :store_item, url: inventory_store_items_path, html: { role: 'form', class: 'form-horizontal' } do |f|
          div.modal-header.clearfix
            button.close.pull-right data-dismiss='modal'
              i.fa.fa-times
            h3.text-primary.pull-left New Store Item
          div.modal-body
            div.form-group
              label.control-label.col-md-4 Name
              div.col-md-8
                = f.text_field :name, class: 'form-control', placeholder: 'Store Item Name'
            div.form-group
              label.control-label.col-md-4 Item
              div.col-md-8
                - physical_items_select_options = @physical_items.map { |item| [item.title, { item_type: item.resource_type, item_id: item.resource_id }.to_json] }
                - digital_items_select_options = @digital_items.map { |item| [item.title, { item_type: item.resource_type, item_id: item.resource_id }.to_json] }
                - bundles_select_options = @bundles.map { |item| [item.title, { item_type: item.resource_type, item_id: item.resource_id }.to_json] }
                = f.select :item, grouped_options_for_select('Physical Items' => physical_items_select_options, 'Digital Items' => digital_items_select_options, 'Bundles' => bundles_select_options), { prompt: 'Choose Item' }, { disabled: (@physical_items + @digital_items + @bundles).blank?, class: 'form-control' }
            div.form-group
              label.control-label.col-md-4 Price
              div.col-md-8
                = f.select :price_id, @prices.collect { |price| [price.name, price.id] }, { prompt: 'Choose Price' }, { disabled: @prices.blank?, class: 'form-control' }
          div.modal-footer
            div.form-group
              div.col-md-8.col-md-offset-4
                = button_tag class: 'btn btn-primary btn-lg', name: nil do
                  | Create
  - @store_items.each do |store_item|
    div.modal id="edit-store-item-#{store_item.id}" role='dialog'
      div.modal-dialog
        div.modal-content
          = form_for :store_item, url: inventory_store_item_path(store_item.id), method: :put, html: { role: 'form', class: 'form-horizontal' } do |f|
            div.modal-header.clearfix
              button.close.pull-right data-dismiss='modal'
                i.fa.fa-times
              h3.text-success.pull-left Edit Store Item
            div.modal-body
              div.form-group
                label.control-label.col-md-4 Name
                div.col-md-8
                  = f.text_field :name, class: 'form-control', value: store_item.name, placeholder: 'Store Item Name'
              div.form-group
                label.control-label.col-md-4 Price
                div.col-md-8
                  = f.select :price_id, ([store_item.price] + @prices).uniq(&:id).collect { |price| [price.name, price.id] }, { prompt: 'Choose Price', selected: store_item.price.id }, { disabled: @prices.blank?, class: 'form-control' }
            div.modal-footer
              div.form-group
                div.col-md-8.col-md-offset-4
                  = button_tag class: 'btn btn-success btn-lg', name: nil do
                    | Update
