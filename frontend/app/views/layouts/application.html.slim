doctype html
html
  head
    title Mini Shop
    = favicon_link_tag '/favicon.ico'
    = stylesheet_link_tag 'application', media: 'all'
    = javascript_include_tag 'application'
    = csrf_meta_tags
  body
    div.navbar.navbar-inverse.navbar-static-top role='navigation'
      div.container
        div.navbar-header
          = link_to 'Mini Shop', root_path, class: 'navbar-brand'
        - if logged_out?
          = link_to sign_in_account_path, class: 'btn btn-success navbar-btn navbar-right' do
            i.fa.fa-sign-in
            |  Sign in
        - else
          ul.nav.navbar-nav
            li = link_to 'Store', store_path
            li = link_to 'Account', account_path
            li
              = link_to '#' do
                i.fa.fa-shopping-cart.fa-lg
                '
                span.badge 5
          = button_to sign_out_account_path, class: 'btn btn-warning navbar-btn navbar-right' do
            i.fa.fa-sign-out
            |  Sign out
    div.container
      div.message
        - if flash[:info].present?
          div.alert.alert-info.alert-dismissible.fade.in role='alert'
            button.close data-dismiss='alert'
              i.fa.fa-times
            strong Sup?
            |  #{flash[:info]}
        - if flash[:success].present?
          div.alert.alert-success.alert-dismissible.fade.in role='alert'
            button.close data-dismiss='alert'
              i.fa.fa-times
            strong Yep!
            |  #{flash[:success]}
        - if flash[:warning].present?
          div.alert.alert-warning.alert-dismissible.fade.in role='alert'
            button.close data-dismiss='alert'
              i.fa.fa-times
            strong Err...
            |  #{flash[:warning]}
        - if flash[:error].present?
          div.alert.alert-danger.alert-dismissible.fade.in role='alert'
            button.close data-dismiss='alert'
              i.fa.fa-times
            strong Nope!
            |  #{flash[:error]}
      div.content.table-responsive
        = yield
      div.modals
        = yield :modals
